var sketch = context.api()
var document = sketch.selectedDocument
var selection = document.selectedLayers
var labels = []
var shapes = []

selection.iterate(function(item) {
    if (item.isArtboard) {
        item.iterate(function(element) {
            if (element.isText) {
                labels.push(element)
            } else if (element.isShape) {
                shapes.push(element)
                log(element.name)
                log(element.sketchObject.style().fills()[0].color())
                log(element.frame)
            }
        })
    }
});


/// GENERATED STEVIA CODE
log("")
log("GENERATED CODE")
log("")
log("import Stevia")
log("")
log("class SteviaView: UIView {")
log("")
labels.map(function(l) {
    log("    let " + lowerCaseFirstLetter(l.name) + " = UILabel()")
});
shapes.map(function(v) {
    log("    let " + lowerCaseFirstLetter(v.name) + " = UIView()")
});
log("")

log("    convenience init() {")
log("        self.init(frame:CGRect.zero)")
log("")
// View Hierarchy
log("        sv(")
var count = 0
labels.map(function(l) {
    if (count == labels.length -1) {
        log("            " + lowerCaseFirstLetter(l.name))
    } else {
        log("            " + lowerCaseFirstLetter(l.name) + ",")
    }

    count++
});
shapes.map(function(v) {
        log("            " + lowerCaseFirstLetter(v.name))
});
log("        )")

log("")
// Layout
log("        // Layout")
labels.map(function(l) {

// Absolute positioning
log("        " + lowerCaseFirstLetter(l.name) + ".top(" + l.frame.y + ")")
log("            .left(" + l.frame.x + ")")
log("            .right(" +  (375-(l.frame.x + l.frame.width)) + ")")

    //if (l.alignment == "center")  {
       // log("        " + lowerCaseFirstLetter(l.name) + ".centerInContainer()")
    //}
});
shapes.map(function(v) {
log("        " + lowerCaseFirstLetter(v.name) + ".top(" + v.frame.y + ")")
log("            .left(" + v.frame.x + ")")
log("            .width(" + v.frame.width + ")")
log("            .height(" + v.frame.height + ")")

    //if (l.alignment == "center")  {
       // log("        " + lowerCaseFirstLetter(l.name) + ".centerInContainer()")
    //}
});
log("")
// Style
log("        // Style")
log("        backgroundColor = .white")
labels.map(function(l) {
    log("        " + lowerCaseFirstLetter(l.name) + ".style { l in ")

var red = l.sketchObject.textColor().red()
var green = l.sketchObject.textColor().green()
var blue = l.sketchObject.textColor().blue()
var alpha = l.sketchObject.textColor().alpha()
    log("            l" + '.font = UIFont(name: "' + l.sketchObject.fontPostscriptName() + '", size:' + l.sketchObject.fontSize() + ")" )
    log("            l.textColor =  UIColor(red: " + red + ", green: " + green + ", blue: " + blue + ", alpha: " + alpha + ")")
    if (l.alignment == "center") {
        log("            l.textAlignment = .center")
    }
    log("        }")
});
// Content
log("")
log("        // Content")
labels.map(function(l) {
    log("        " + lowerCaseFirstLetter(l.name) + '.text = "' + l.text + '"')
});

log("    }")
log("}")

function lowerCaseFirstLetter(string) {
    return string.charAt(0).toLowerCase() + string.slice(1);
}
